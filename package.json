{
  "name": "mcp-god-mode",
  "version": "2.1b",
  "description": "MCP God Mode Server - Advanced AI Agent Toolkit (Built on Model Context Protocol by Anthropic) - Bi'iiradat Allah",
  "main": "start-mcp.js",
  "bin": {
    "mcp-god-mode": "start-mcp.js"
  },
  "scripts": {
    "install": "cd dev && node install.js",
    "install:ultra-minimal": "cd dev && npm run build",
    "install:minimal": "cd dev && npm run build", 
    "install:lazy": "cd dev && npm run build",
    "install:full": "cd dev && npm run build",
    "install:custom": "cd dev && node build-server.js",
    "build": "cd dev && tsc -p .",
    "start": "node dist/server-refactored.js",
    "start:refactored": "node dist/server-refactored.js",
    "start:modular": "node dist/server-modular.js",
    "start:lazy": "node dist/server-lazy.js",
    "start:minimal": "node dist/server-minimal.js",
    "dev": "cd dev && tsc -p . && node ../dist/server-refactored.js",
    "web": "node dist/web-server.js",
    "smoke": "node scripts/run-smoke-tests.js",
    "smoke:validate": "node scripts/validate-manifest.js",
    "smoke:list": "node -e \"console.log(require('./tools.manifest.json').tools.map(t => t.name).join('\\n'))\"",
    "quickstart": "cd dev && node quickstart-health.mjs",
    "health": "cd dev && node quickstart-health.mjs",
    "test": "npm run smoke:validate && npm run smoke",
    "test:validate": "npm run smoke:validate",
    "test:smoke": "npm run smoke",
    "test:elevated": "node test_elevated_permissions.mjs",
    "test:elevated:windows": "cross-env PLATFORM=win32 node test_elevated_permissions.mjs",
    "test:elevated:linux": "cross-env PLATFORM=darwin node test_elevated_permissions.mjs",
    "test:elevated:macos": "cross-env PLATFORM=darwin node test_elevated_permissions.mjs",
    "cli": "node dist/server-refactored.js",
    "build:modular": "tsc src/server-modular.ts --outDir dist --target es2020 --module es2020 --moduleResolution node --esModuleInterop --allowSyntheticDefaultImports",
    "build:lazy": "tsc src/server-lazy.ts --outDir dist --target es2020 --module es2020 --moduleResolution node --esModuleInterop --allowSyntheticDefaultImports",
    "build:email-only": "cd dev && node build-server.js health system_info send_email parse_email",
    "build:minimal": "cd dev && node build-server.js health system_info fs_list",
    "build:core-only": "cd dev && node build-server.js health system_info",
    "build:custom": "cd dev && node build-server.js",
    "postinstall:rf_sense": "python -m pip install -r dev/src/python/requirements-rf.txt || exit 0",
    "tool-router:dev": "cross-env NODE_NO_WARNINGS=1 node ./servers/tool-router.js",
    "tool-router:test": "node --test servers/tool-router.test.js",
    "tool-router:lint": "eslint servers/tool-router.js servers/router-registry/**/*.js || exit 0",
    "tool-router:typecheck": "tsc -p . --noEmit || exit 0",
    "tool-router:build": "npm-run-all -s tool-router:lint tool-router:typecheck",
    "tool-router:ci": "npm-run-all -s tool-router:build tool-router:test",
    "tool-router:assure": "node ./scripts/assure-tool-router.mjs"
  },
  "keywords": [
    "mcp",
    "ai",
    "automation",
    "security",
    "cross-platform"
  ],
  "author": "MCP God Mode Team",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.2.0"
  },
  "devDependencies": {
    "ajv": "^8.12.0",
    "ajv-formats": "^2.1.1",
    "cross-env": "^7.0.3",
    "npm-run-all": "^4.1.5",
    "shx": "^0.3.4"
  }
}
