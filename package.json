{
  "name": "mcp-god-mode",
  "version": "1.6.0",
  "description": "MCP God Mode Server - Advanced AI Agent Toolkit",
  "main": "start-mcp.js",
  "bin": {
    "mcp-god-mode": "start-mcp.js"
  },
  "scripts": {
    "install": "cd dev && node install.js",
    "install:ultra-minimal": "cd dev && npm run build",
    "install:minimal": "cd dev && npm run build", 
    "install:full": "cd dev && npm run build",
    "install:custom": "cd dev && node build-server.js",
    "build": "tsc -p .",
    "start": "node dist/server-refactored.js",
    "dev": "tsc -p . && node dist/server-refactored.js",
    "web": "node dist/web-server.js",
    "test": "echo \"Error: no test specified\" && exit 1",
    "test:elevated": "node test_elevated_permissions.mjs",
    "test:elevated:windows": "cross-env PLATFORM=win32 node test_elevated_permissions.mjs",
    "test:elevated:linux": "cross-env PLATFORM=darwin node test_elevated_permissions.mjs",
    "test:elevated:macos": "cross-env PLATFORM=darwin node test_elevated_permissions.mjs",
    "cli": "node dist/server-refactored.js",
    "build:modular": "tsc src/server-modular.ts --outDir dist --target es2020 --module es2020 --moduleResolution node --esModuleInterop --allowSyntheticDefaultImports",
    "build:email-only": "cd dev && node build-server.js health system_info send_email parse_email",
    "build:minimal": "cd dev && node build-server.js health system_info fs_list",
    "build:core-only": "cd dev && node build-server.js health system_info",
    "build:custom": "cd dev && node build-server.js"
  },
  "keywords": [
    "mcp",
    "ai",
    "automation",
    "security",
    "cross-platform"
  ],
  "author": "MCP God Mode Team",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.2.0"
  }
}
